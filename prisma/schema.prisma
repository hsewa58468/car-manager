
model Car {
  id          String      @id
  brand       String
  name        String
  price       String
  imageUrl    String
  imageGroup  String[]
  specs       Spec? // 一對一
  info        InfoCategory[] // 一對多（可多組 info）
}

model Spec {
  id          Int      @id @default(autoincrement())
  year        Int
  color       String
  engineCC    String
  transmission String
  carId       String   @unique
  car         Car      @relation(fields: [carId], references: [id], onDelete: Cascade)
}

model InfoCategory {
  id        String      @id @default(uuid())
  title     String
  special   String[]
  carId     String
  car       Car         @relation(fields: [carId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  password       String         // 密碼請加密儲存
  role           String         // 例：'ADMIN' 或 'USER'
  refreshTokens  RefreshToken[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model RefreshToken {
  id          String   @id @default(uuid())
  hashedToken String   @unique
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  expireAt    DateTime
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")  // 需包含連線池參數
  relationMode = "prisma"
}
